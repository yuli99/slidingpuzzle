<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">

	<global-method-security pre-post-annotations="enabled" />

	<http use-expressions="true">
		<intercept-url pattern="/users**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/users/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/account**" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/account/**" access="hasRole('ROLE_USER')" />
		<form-login login-page="/login.html"
			username-parameter="userName"
			password-parameter="password"
			default-target-url="/index.html" 
			authentication-failure-url="/login.html?error=ture" />
		<logout logout-url="/logout" 
			logout-success-url="/login.html?logout=true"/>
		<csrf disabled="true" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<password-encoder hash="bcrypt" />

			<jdbc-user-service data-source-ref="dataSource"
				authorities-by-username-query="select users.userName, roles.roleName from users
											   join users_roles on users.userId = users_roles.users_userId
											   join roles on users_roles.roles_roleId = roles.roleId
											   where users.userName = ?"
				users-by-username-query="select userName,password,enabled from users where userName = ?" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>